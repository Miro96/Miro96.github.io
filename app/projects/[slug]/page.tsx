'use client';

import React from 'react';
import { useParams, useRouter } from 'next/navigation';
import Image from 'next/image';
import Link from 'next/link';
import { getProductBySlug } from '@/lib/products';
import { useI18n } from '@/i18n';
import Reveal from '@/components/Reveal';
import styles from './page.module.css';

export default function ProductDetailPage() {
  const params = useParams();
  const router = useRouter();
  const { locale } = useI18n();
  const slug = params.slug as string;

  const product = getProductBySlug(slug);

  if (!product) {
    return (
      <div className={styles.container}>
        <div style={{ maxWidth: '800px', margin: '100px auto', textAlign: 'center', padding: '0 20px' }}>
          <h1 style={{ fontSize: '3rem', color: 'var(--color-pink)', marginBottom: '20px' }}>
            {locale === 'en' && 'Product Not Found'}
            {locale === 'ru' && '–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'}
            {locale === 'be' && '–ü—Ä–∞–¥—É–∫—Ç –Ω–µ –∑–Ω–æ–π–¥–∑–µ–Ω—ã'}
            {locale === 'pl' && 'Produkt nie znaleziony'}
            {locale === 'uk' && '–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}
          </h1>
          <Link href="/projects" className={styles.linkButton}>
            {locale === 'en' && 'Back to Projects'}
            {locale === 'ru' && '–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º'}
            {locale === 'be' && '–í—è—Ä–Ω—É—Ü—Ü–∞ –¥–∞ –ø—Ä–∞–µ–∫—Ç–∞—û'}
            {locale === 'pl' && 'Powr√≥t do projekt√≥w'}
            {locale === 'uk' && '–ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ–µ–∫—Ç—ñ–≤'}
          </Link>
        </div>
      </div>
    );
  }

  const labels = {
    backToProjects: {
      en: '‚Üê Back to Projects',
      ru: '‚Üê –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º',
      be: '‚Üê –í—è—Ä–Ω—É—Ü—Ü–∞ –¥–∞ –ø—Ä–∞–µ–∫—Ç–∞—û',
      pl: '‚Üê Powr√≥t do projekt√≥w',
      uk: '‚Üê –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ–µ–∫—Ç—ñ–≤',
    },
    techStack: {
      en: 'Technology Stack',
      ru: '–°—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
      be: '–°—Ç—ç–∫ —Ç—ç—Ö–Ω–∞–ª–æ–≥—ñ–π',
      pl: 'Stos technologiczny',
      uk: '–°—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π',
    },
    links: {
      en: 'Links',
      ru: '–°—Å—ã–ª–∫–∏',
      be: '–°–ø–∞—Å—ã–ª–∫—ñ',
      pl: 'Linki',
      uk: '–ü–æ—Å–∏–ª–∞–Ω–Ω—è',
    },
    website: {
      en: 'Visit Website',
      ru: '–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç',
      be: '–ù–∞–≤–µ–¥–∞—Ü—å —Å–∞–π—Ç',
      pl: 'Odwied≈∫ stronƒô',
      uk: '–í—ñ–¥–≤—ñ–¥–∞—Ç–∏ —Å–∞–π—Ç',
    },
    demo: {
      en: 'Try Demo',
      ru: '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥–µ–º–æ',
      be: '–ü–∞—Å–ø—Ä–∞–±–∞–≤–∞—Ü—å –¥—ç–º–∞',
      pl: 'Wypr√≥buj demo',
      uk: '–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –¥–µ–º–æ',
    },
    github: {
      en: 'View on GitHub',
      ru: '–°–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ GitHub',
      be: '–ì–ª—è–¥–∑–µ—Ü—å –Ω–∞ GitHub',
      pl: 'Zobacz na GitHub',
      uk: '–î–∏–≤–∏—Ç–∏—Å—è –Ω–∞ GitHub',
    },
    investmentTitle: {
      en: 'Investment Opportunity',
      ru: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å',
      be: '–Ü–Ω–≤–µ—Å—Ç—ã—Ü—ã–π–Ω–∞—è –º–∞–≥—á—ã–º–∞—Å—Ü—å',
      pl: 'Mo≈ºliwo≈õƒá inwestycyjna',
      uk: '–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ–π–Ω–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å',
    },
    problem: {
      en: 'üéØ The Problem',
      ru: 'üéØ –ü—Ä–æ–±–ª–µ–º–∞',
      be: 'üéØ –ü—Ä–∞–±–ª–µ–º–∞',
      pl: 'üéØ Problem',
      uk: 'üéØ –ü—Ä–æ–±–ª–µ–º–∞',
    },
    solution: {
      en: 'üí° Our Solution',
      ru: 'üí° –ù–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ',
      be: 'üí° –ù–∞—à–∞ —Ä–∞—à—ç–Ω–Ω–µ',
      pl: 'üí° Nasze rozwiƒÖzanie',
      uk: 'üí° –ù–∞—à–µ —Ä—ñ—à–µ–Ω–Ω—è',
    },
    metrics: {
      en: 'üìä Key Metrics',
      ru: 'üìä –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏',
      be: 'üìä –ö–ª—é—á–∞–≤—ã—è –º–µ—Ç—Ä—ã–∫—ñ',
      pl: 'üìä Kluczowe metryki',
      uk: 'üìä –ö–ª—é—á–æ–≤—ñ –º–µ—Ç—Ä–∏–∫–∏',
    },
    traction: {
      en: 'üöÄ Traction & Growth',
      ru: 'üöÄ –¢—Ä—ç–∫—à–Ω –∏ —Ä–æ—Å—Ç',
      be: 'üöÄ –¢—Ä—ç–∫—à–Ω —ñ —Ä–æ—Å—Ç',
      pl: 'üöÄ Wzrost i rozw√≥j',
      uk: 'üöÄ –¢—Ä–µ–∫—à–Ω —ñ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è',
    },
    request: {
      en: 'üí∞ Investment Request',
      ru: 'üí∞ –ó–∞–ø—Ä–æ—Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π',
      be: 'üí∞ –ó–∞–ø—ã—Ç —ñ–Ω–≤–µ—Å—Ç—ã—Ü—ã–π',
      pl: 'üí∞ Pro≈õba o inwestycjƒô',
      uk: 'üí∞ –ó–∞–ø–∏—Ç —ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ–π',
    },
    contact: {
      en: 'Contact Us',
      ru: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏',
      be: '–ó–≤—è–∑–∞—Ü—Ü–∞ –∑ –Ω–∞–º—ñ',
      pl: 'Skontaktuj siƒô z nami',
      uk: "–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏",
    },
  };

  return (
    <div className={styles.container}>
      <div className={styles.hero}>
        <Link href="/projects" className={styles.backLink}>
          {labels.backToProjects[locale]}
        </Link>

        <Reveal>
          <div className={styles.heroContent}>
            <div className={styles.heroText}>
              <h1 className={styles.title}>{product.title[locale]}</h1>
              <p className={styles.description}>{product.description[locale]}</p>

              {product.techStack && product.techStack.length > 0 && (
                <div>
                  <h3 style={{ color: 'rgba(255, 255, 255, 0.6)', fontSize: '0.9rem', marginBottom: '12px' }}>
                    {labels.techStack[locale]}
                  </h3>
                  <div className={styles.techStack}>
                    {product.techStack.map((tech) => (
                      <span key={tech} className={styles.techTag}>
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
              )}

              {(product.links.website || product.links.demo || product.links.github) && (
                <div className={styles.links}>
                  {product.links.website && (
                    <a
                      href={product.links.website}
                      target="_blank"
                      rel="noopener noreferrer"
                      className={`${styles.linkButton} ${styles.primary}`}
                    >
                      {labels.website[locale]} ‚Üí
                    </a>
                  )}
                  {product.links.demo && (
                    <a
                      href={product.links.demo}
                      target="_blank"
                      rel="noopener noreferrer"
                      className={styles.linkButton}
                    >
                      {labels.demo[locale]}
                    </a>
                  )}
                  {product.links.github && (
                    <a
                      href={product.links.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      className={styles.linkButton}
                    >
                      {labels.github[locale]}
                    </a>
                  )}
                </div>
              )}
            </div>

            <div className={styles.heroImage}>
              {product.thumbnail.src ? (
                <Image
                  src={product.thumbnail.src}
                  alt={product.thumbnail.alt[locale]}
                  fill
                  className={styles.thumbnailImage}
                  priority
                  sizes="(max-width: 768px) 100vw, 50vw"
                />
              ) : (
                <div style={{ width: '100%', height: '100%', background: 'rgba(255, 20, 147, 0.1)' }} />
              )}
            </div>
          </div>
        </Reveal>
      </div>

      {/* Investment Section */}
      <section className={styles.investmentSection}>
        <Reveal>
          <h2 className={styles.sectionTitle}>{labels.investmentTitle[locale]}</h2>
        </Reveal>

        <div className={styles.investmentGrid}>
          {/* Problem */}
          <Reveal delay={0.1}>
            <div className={styles.investmentBlock}>
              <h3 className={styles.blockTitle}>
                <span className={styles.blockIcon}>üéØ</span>
                {labels.problem[locale].replace('üéØ ', '')}
              </h3>
              <p className={styles.blockText}>{product.investment.problem[locale]}</p>
            </div>
          </Reveal>

          {/* Solution */}
          <Reveal delay={0.2}>
            <div className={styles.investmentBlock}>
              <h3 className={styles.blockTitle}>
                <span className={styles.blockIcon}>üí°</span>
                {labels.solution[locale].replace('üí° ', '')}
              </h3>
              <p className={styles.blockText}>{product.investment.solution[locale]}</p>
            </div>
          </Reveal>

          {/* Metrics */}
          <Reveal delay={0.3}>
            <div className={styles.investmentBlock}>
              <h3 className={styles.blockTitle}>
                <span className={styles.blockIcon}>üìä</span>
                {labels.metrics[locale].replace('üìä ', '')}
              </h3>
              <div className={styles.metricsGrid}>
                {product.investment.metrics.map((metric, index) => (
                  <div key={index} className={styles.metricCard}>
                    <div className={styles.metricValue}>
                      {metric.value}
                      {metric.trend === 'up' && <span className={`${styles.metricTrend} ${styles.up}`}>‚Üë</span>}
                    </div>
                    <div className={styles.metricLabel}>{metric.key[locale]}</div>
                  </div>
                ))}
              </div>
            </div>
          </Reveal>

          {/* Traction */}
          <Reveal delay={0.4}>
            <div className={styles.investmentBlock}>
              <h3 className={styles.blockTitle}>
                <span className={styles.blockIcon}>üöÄ</span>
                {labels.traction[locale].replace('üöÄ ', '')}
              </h3>
              <p className={styles.blockText}>{product.investment.traction[locale]}</p>
            </div>
          </Reveal>

          {/* Investment Request */}
          <Reveal delay={0.5}>
            <div className={styles.requestBlock}>
              <h3 className={styles.requestTitle}>{product.investment.request.round[locale]}</h3>
              <div className={styles.requestAmount}>{product.investment.request.amount[locale]}</div>

              <div className={styles.contactInfo}>
                <p style={{ color: 'rgba(255, 255, 255, 0.8)', margin: '0 0 16px' }}>{labels.contact[locale]}:</p>
                <a href={`mailto:${product.investment.contact.email}`} className={styles.contactLink}>
                  üìß {product.investment.contact.email}
                </a>
                {product.investment.contact.telegram && (
                  <a
                    href={`https://t.me/${product.investment.contact.telegram.replace('@', '')}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    className={styles.contactLink}
                  >
                    üí¨ {product.investment.contact.telegram}
                  </a>
                )}
                {product.investment.contact.linkedin && (
                  <a
                    href={product.investment.contact.linkedin}
                    target="_blank"
                    rel="noopener noreferrer"
                    className={styles.contactLink}
                  >
                    üîó LinkedIn
                  </a>
                )}
              </div>
            </div>
          </Reveal>
        </div>
      </section>
    </div>
  );
}
